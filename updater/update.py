"""
updater/update.py
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç https://zapretdpi.ru/version.json –∏, –µ—Å–ª–∏ –≤ —Å–≤–æ—ë–º
–∫–∞–Ω–∞–ª–µ (stable / test) –µ—Å—Ç—å –±–æ–ª–µ–µ —Å–≤–µ–∂–∞—è –≤–µ—Ä—Å–∏—è, —Ç–∏—Ö–æ
—Å–∫–∞—á–∏–≤–∞–µ—Ç —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫, –∑–∞–ø—É—Å–∫–∞–µ—Ç –µ–≥–æ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É.

API 100-% —Å–æ–≤–º–µ—Å—Ç–∏–º —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º:
    ‚Ä¢ run_update_async(parent, silent=False)        ‚Äì —Å–æ–∑–¥–∞—ë—Ç –ø–æ—Ç–æ–∫
    ‚Ä¢ check_and_run_update(parent, status_cb, ‚Ä¶)    ‚Äì —Å–∞–º–∞ –ª–æ–≥–∏–∫–∞
    ‚Ä¢ —Å–∏–≥–Ω–∞–ª UpdateWorker.finished(bool)            ‚Äì –æ—Å—Ç–∞—ë—Ç—Å—è bool
"""
from __future__ import annotations

import os, sys, tempfile, subprocess, shutil, time, json
from typing import Callable

from PyQt6.QtCore    import QObject, QThread, pyqtSignal, QTimer
from PyQt6.QtWidgets import QMessageBox

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∫–æ–Ω—Ñ–∏–≥ –ø—Ä–æ–≥—Ä–∞–º–º—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
from config import CHANNEL, APP_VERSION            # build_info moved to config/__init__.py
from log                import log

META_URL = "https://zapretdpi.ru/version.json"                # –µ–¥–∏–Ω—ã–π JSON
TIMEOUT  = 10                                                 # —Å–µ–∫.

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def _safe_set_status(parent, msg: str):
    """–ü–∏—à–µ–º –≤ status-label, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å; –∏–Ω–∞—á–µ –≤ –∫–æ–Ω—Å–æ–ª—å."""
    if parent and hasattr(parent, "set_status"):
        parent.set_status(msg)
    else:
        print(msg)

def _kill_winws():
    """–ú—è–≥–∫–æ-–∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ —É–±–∏–≤–∞–µ–º winws.exe, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –º–æ–≥ –∑–∞–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª."""
    subprocess.run(
        "C:\\Windows\\System32\\taskkill.exe /F /IM winws.exe /T",
        shell=True,
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL,
    )

def _download(url: str, dest: str, on_progress: Callable[[int, int], None] | None):
    import requests

    with requests.get(url, stream=True, timeout=TIMEOUT) as resp:
        resp.raise_for_status()
        total = int(resp.headers.get("content-length", 0))
        done  = 0
        with open(dest, "wb") as fp:
            for chunk in resp.iter_content(8192):
                fp.write(chunk)
                if on_progress and total:
                    done += len(chunk)
                    on_progress(done, total)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ —Ñ–æ–Ω–æ–≤–æ–π –≤–æ—Ä–∫–µ—Ä ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
class UpdateWorker(QObject):
    progress = pyqtSignal(str)    # —Å—Ç–∞—Ç—É—Å-—Å—Ç—Ä–æ–∫–∞
    finished = pyqtSignal(bool)   # True ‚Äì —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω

    def __init__(self, parent=None, silent: bool = False):
        super().__init__()
        self._parent = parent
        self._silent = silent

    # ----------------------------------------------------------
    def _emit(self, msg: str):
        self.progress.emit(msg)

    # ----------------------------------------------------------
    def run(self):
        try:
            ok = check_and_run_update(
                parent    = self._parent,
                status_cb = self._emit,
                silent    = self._silent,
            )
            self.finished.emit(ok)
        except Exception as e:
            self._emit(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
            self.finished.emit(False)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ public-API ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def run_update_async(parent=None, *, silent: bool = False) -> QThread:
    """
    –°–æ–∑–¥–∞—ë—Ç QThread + UpdateWorker.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ thread (–≤ –Ω—ë–º –µ—Å—Ç—å ._worker).
    """
    thr   = QThread(parent)
    worker = UpdateWorker(parent, silent)
    worker.moveToThread(thr)

    thr.started .connect(worker.run)
    worker.finished.connect(thr.quit)
    worker.finished.connect(worker.deleteLater)
    thr.finished.connect(thr.deleteLater)

    # status-label + –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    worker.progress.connect(lambda m: _safe_set_status(parent, m))
    worker.progress.connect(lambda m: log(f'{m}', "üîÅ UPDATE"))

    thr._worker = worker          # üëà –∑–∞—â–∏—Ç–∏–ª–∏ –æ—Ç GC
    thr.start()

    # –¥–µ—Ä–∂–∏–º thread –≤ parent-–æ–∫–Ω–µ, —á—Ç–æ–±—ã GC –Ω–µ —É–±–∏–ª —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏
    if parent is not None:
        lst = getattr(parent, "_active_upd_threads", [])
        lst.append(thr)
        parent._active_upd_threads = lst
        thr.finished.connect(lambda *, l=lst, t=thr: l.remove(t))

    return thr

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def safe_json_response(response):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–∞—Ä—Å–∏—Ç JSON –∏–∑ response, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è BOM"""
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±
        return response.json()
    except json.JSONDecodeError:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π BOM
        content = response.content
        if content.startswith(b'\xef\xbb\xbf'):
            content = content[3:]
        return json.loads(content.decode('utf-8'))
    
def check_and_run_update(
    *,
    parent   = None,
    status_cb: Callable[[str], None] | None = None,
    silent   : bool = False,
) -> bool:
    """
    1) –°–∫–∞—á–∏–≤–∞–µ—Ç META_URL –∏ –±–µ—Ä—ë—Ç —É–∑–µ–ª CHANNEL (stable / test).
    2) –ï—Å–ª–∏ –≤–µ—Ä—Å–∏—è –Ω–æ–≤–µ–µ ‚Äì (optionally) —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
       –∑–∞—Ç–µ–º –∫–∞—á–∞–µ—Ç .exe ‚Üí TEMP, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç winws.exe
       –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫.
    3) –ß–µ—Ä–µ–∑ 1,5 —Å –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É.
    """
    # –ª–æ–∫–∞–ª—å–Ω—ã–µ ¬´—à–æ—Ä—Ç–∫–∞—Ç—ã¬ª
    def set_status(msg: str):
        if status_cb:
            status_cb(msg)
        else:
            _safe_set_status(parent, msg)

    from packaging import version
    import requests

    # ‚Äî 1. meta-—Ñ–∞–π–ª --------------------------------------------------------
    set_status("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π‚Ä¶")
    try:
        resp = requests.get(META_URL, timeout=TIMEOUT)
        resp.raise_for_status()
        meta_all = safe_json_response(resp)
    except Exception as e:
        log(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å version.json: {e}", "üîÅ‚ùå ERROR")
        set_status("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        return False

    meta = meta_all.get(CHANNEL)
    if not meta:
        log(f"–í version.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –±–ª–æ–∫ '{CHANNEL}'", "üîÅ‚ùå ERROR")
        return False

    new_ver = meta.get("version")
    upd_url = meta.get("update_url")
    notes   = meta.get("release_notes", "")

    if not new_ver or not upd_url:
        log("–ù–µ–ø–æ–ª–Ω—ã–π –±–ª–æ–∫ version/update_url.", "üîÅ‚ùå ERROR")
        return False

    log(f"Auto-update: channel={CHANNEL}, local={APP_VERSION}, remote={new_ver}", "üîÅ UPDATE")

    if version.parse(new_ver) <= version.parse(APP_VERSION):
        set_status(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç (v{APP_VERSION})")
        if not silent:
            QMessageBox.information(parent, "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ", f"–£ –≤–∞—Å –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è ({APP_VERSION}).")
        return False

    # ‚Äî 2. —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -----------------------------------------
    if not silent:
        txt = (f"–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è {new_ver} (—É –≤–∞—Å {APP_VERSION}).\n\n"
               f"{notes}\n\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å?")
        btn = QMessageBox.question(
            parent, "–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
            txt,
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )
        if btn != QMessageBox.StandardButton.Yes:
            return False

    # ‚Äî 3. —Å–∫–∞—á–∏–≤–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ --------------------------------------------
    tmp_dir   = tempfile.mkdtemp(prefix="zapret_upd_")
    setup_exe = os.path.join(tmp_dir, "ZapretSetup.exe")

    def _prog(done, total): set_status(f"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ‚Ä¶ {done*100//total}%")
    try:
        _download(upd_url, setup_exe, _prog if not silent else None)
    except Exception as e:
        set_status(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        shutil.rmtree(tmp_dir, True)
        return False

    # ‚Äî 4. –∑–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ --------------------------------------------
    try:
        # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º DPI-–ø—Ä–æ—Ü–µ—Å—Å –∏ —É–±–∏–≤–∞–µ–º, –µ—Å–ª–∏ –Ω–µ —É—Å–ø–µ–ª
        from dpi.stop import stop_dpi
        stop_dpi(parent)
        time.sleep(0.5)
        _kill_winws()
        time.sleep(1.5)

        subprocess.Popen(["C:\\Windows\\System32\\cmd.exe", "/c", "start", "", setup_exe, "/NORESTART"], shell=False)
        set_status("–ó–∞–ø—É—â–µ–Ω —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫‚Ä¶")
        # —á–µ—Ä–µ–∑ 1,5 —Å–µ–∫ –≤—ã—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã Install‚ÄêEXE —Å–º–æ–≥ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª—ã
        QTimer.singleShot(1500, lambda: os._exit(0))
        return True

    except Exception as e:
        set_status(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫: {e}")
        shutil.rmtree(tmp_dir, True)
        return False
