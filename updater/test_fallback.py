# updater/test_fallback.py
"""
test_fallback.py
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è fallback –º–µ—Ö–∞–Ω–∏–∑–º–∞
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
current_dir = Path(__file__).parent
parent_dir = current_dir.parent
sys.path.insert(0, str(parent_dir))

from updater.release_manager import get_release_manager, get_latest_release

def main():
    manager = get_release_manager()
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–ª–∏–∑–æ–≤...\n")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print("-" * 50)
    print(f"üìç –°–µ—Ä–≤–µ—Ä—ã:")
    for server in manager.fallback_servers:
        print(f"   {server['priority']}. {server['name']} - {server['url']}")
    
    api_key = os.getenv("ZAPRET_SERVER_API_KEY")
    if api_key:
        print(f"üîê API –∫–ª—é—á: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print(f"üîì API –∫–ª—é—á: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã
    for channel in ["stable", "dev"]:
        print(f"üì¶ –ö–∞–Ω–∞–ª: {channel}")
        print("-" * 50)
        
        release = get_latest_release(channel)
        
        if release:
            print(f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫: {release.get('source', manager.last_source)}")
            print(f"üìå –í–µ—Ä—Å–∏—è: {release['version']}")
            print(f"üè∑Ô∏è  –¢–µ–≥: {release['tag_name']}")
            print(f"üîó URL –∑–∞–≥—Ä—É–∑–∫–∏: {release['update_url']}")
            print(f"üìÖ –î–∞—Ç–∞: {release.get('published_at', '–Ω/–¥')}")
            print(f"üîÑ Prerelease: {'–î–∞' if release.get('prerelease') else '–ù–µ—Ç'}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –æ–ø–∏—Å–∞–Ω–∏—è
            notes = release.get('release_notes', '')
            if notes:
                if len(notes) > 200:
                    print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {notes[:200]}...")
                else:
                    print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {notes}")
            else:
                print("üìù –û–ø–∏—Å–∞–Ω–∏–µ: –Ω–µ—Ç")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–ª–∏–∑")
            print(f"‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {manager.last_error}")
        
        print("\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤
    print("üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤:")
    print("-" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub
    print("üìç GitHub API:")
    try:
        import requests
        resp = requests.get("https://api.github.com/rate_limit", timeout=5)
        if resp.status_code == 200:
            data = resp.json()
            rate = data.get('rate', {})
            remaining = rate.get('remaining', 0)
            limit = rate.get('limit', 0)
            print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω (–ª–∏–º–∏—Ç: {remaining}/{limit})")
        else:
            print(f"   ‚ö†Ô∏è  HTTP {resp.status_code}")
    except Exception as e:
        print(f"   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {str(e)}")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º fallback —Å–µ—Ä–≤–µ—Ä—ã
    for server in manager.fallback_servers:
        print(f"üìç {server['name']} ({server['url']}):")
        health = manager.check_server_health(server["url"], server["verify_ssl"])
        
        if health.get("status") == "ok":
            print(f"   ‚úÖ –û–Ω–ª–∞–π–Ω")
            if health.get("files"):
                files = health["files"]
                print(f"   üìÑ –§–∞–π–ª—ã: stable={files.get('stable', False)}, "
                      f"test={files.get('test', False)}, "
                      f"version.json={files.get('version_json', False)}")
            if health.get("versions"):
                versions = health["versions"]
                print(f"   üìå –í–µ—Ä—Å–∏–∏: stable={versions.get('stable', '–Ω/–¥')}, "
                      f"test={versions.get('test', '–Ω/–¥')}")
        else:
            error = health.get("error", "Unknown error")
            print(f"   ‚ùå –û—Ñ—Ñ–ª–∞–π–Ω: {error}")
    
    print("\n" + "=" * 50)
    print("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤:")
    print("     set ZAPRET_FALLBACK_SERVER_1=https://example.com")
    print("     set ZAPRET_SERVER_API_KEY=your-key")
    print("   - –ò–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã:")
    print("     set ZAPRET_HTTPS_SERVER=https://192.168.1.100:8443")
    print("     set ZAPRET_HTTP_SERVER=http://192.168.1.100:8080")

if __name__ == "__main__":
    main()