# dns_check_dialog.py
from PyQt6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QPushButton, 
                            QTextEdit, QLabel, QProgressBar, QFrame)
from PyQt6.QtCore import QThread, QObject, pyqtSignal, Qt
from PyQt6.QtGui import QFont, QTextCursor
from dns_checker import DNSChecker
import socket

class DNSCheckWorker(QObject):
    """Worker –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è DNS –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    update_signal = pyqtSignal(str)
    progress_signal = pyqtSignal(int, int)  # current, total
    finished_signal = pyqtSignal(dict)
    
    def run(self):
        try:
            checker = DNSChecker()
            results = checker.check_dns_poisoning(log_callback=self.update_signal.emit)
            self.finished_signal.emit(results)
        except Exception as e:
            self.update_signal.emit(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            self.finished_signal.emit({})

class DNSCheckDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS –ø–æ–¥–º–µ–Ω—ã"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –ø–æ–¥–º–µ–Ω—ã")
        self.setMinimumWidth(700)
        self.setMinimumHeight(500)
        self.setModal(True)
        
        self.init_ui()
        self.worker = None
        self.thread = None
        
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout()
        layout.setSpacing(10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_frame = QFrame()
        title_frame.setStyleSheet("""
            QFrame {
                background-color: #2196F3;
                border-radius: 5px;
                padding: 10px;
            }
        """)
        title_layout = QVBoxLayout(title_frame)
        
        title = QLabel("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –ø–æ–¥–º–µ–Ω—ã –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º")
        title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title.setStyleSheet("font-size: 16pt; font-weight: bold; color: white;")
        title_layout.addWidget(title)
        
        subtitle = QLabel("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞ –¥–æ–º–µ–Ω–æ–≤ YouTube –∏ Discord —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ DNS —Å–µ—Ä–≤–µ—Ä—ã")
        subtitle.setAlignment(Qt.AlignmentFlag.AlignCenter)
        subtitle.setStyleSheet("font-size: 10pt; color: white;")
        title_layout.addWidget(subtitle)
        
        layout.addWidget(title_frame)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        info_frame = QFrame()
        info_frame.setFrameStyle(QFrame.Shape.Box)
        info_frame.setStyleSheet("""
            QFrame {
                background-color: #f5f5f5;
                border: 1px solid #ddd;
                border-radius: 5px;
                padding: 10px;
            }
        """)
        info_layout = QVBoxLayout(info_frame)
        
        info_text = QLabel(
            "–≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å:\n"
            "‚Ä¢ –ë–ª–æ–∫–∏—Ä—É–µ—Ç –ª–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å–∞–π—Ç—ã —á–µ—Ä–µ–∑ DNS –ø–æ–¥–º–µ–Ω—É\n"
            "‚Ä¢ –ö–∞–∫–∏–µ DNS —Å–µ—Ä–≤–µ—Ä—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∞–¥—Ä–µ—Å–∞\n"
            "‚Ä¢ –ö–∞–∫–æ–π DNS —Å–µ—Ä–≤–µ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å"
        )
        info_text.setWordWrap(True)
        info_text.setStyleSheet("color: #333; font-size: 9pt;")
        info_layout.addWidget(info_text)
        
        layout.addWidget(info_frame)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        self.progress_bar = QProgressBar()
        self.progress_bar.setVisible(False)
        self.progress_bar.setStyleSheet("""
            QProgressBar {
                border: 2px solid grey;
                border-radius: 5px;
                text-align: center;
                height: 25px;
            }
            QProgressBar::chunk {
                background-color: #4CAF50;
                border-radius: 3px;
            }
        """)
        layout.addWidget(self.progress_bar)
        
        # –°—Ç–∞—Ç—É—Å
        self.status_label = QLabel("–ì–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ")
        self.status_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.status_label.setStyleSheet("font-weight: bold; color: #666; padding: 5px;")
        layout.addWidget(self.status_label)
        
        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.result_text = QTextEdit()
        self.result_text.setReadOnly(True)
        self.result_text.setFont(QFont("Consolas", 9))
        self.result_text.setStyleSheet("""
            QTextEdit {
                background-color: #1e1e1e;
                color: #d4d4d4;
                border: 1px solid #444;
                border-radius: 5px;
                padding: 10px;
            }
        """)
        layout.addWidget(self.result_text, 1)
        
        # –ö–Ω–æ–ø–∫–∏
        button_layout = QHBoxLayout()
        button_layout.setSpacing(10)
        
        self.check_button = QPushButton("üîç –ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É")
        self.check_button.setMinimumHeight(35)
        self.check_button.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                font-weight: bold;
                font-size: 10pt;
                border: none;
                border-radius: 5px;
                padding: 5px 15px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
            QPushButton:pressed {
                background-color: #3d8b40;
            }
            QPushButton:disabled {
                background-color: #cccccc;
                color: #666666;
            }
        """)
        self.check_button.clicked.connect(self.start_check)
        button_layout.addWidget(self.check_button)
        
        self.save_button = QPushButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
        self.save_button.setMinimumHeight(35)
        self.save_button.setEnabled(False)
        self.save_button.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                font-weight: bold;
                font-size: 10pt;
                border: none;
                border-radius: 5px;
                padding: 5px 15px;
            }
            QPushButton:hover {
                background-color: #1976D2;
            }
            QPushButton:pressed {
                background-color: #1565C0;
            }
            QPushButton:disabled {
                background-color: #cccccc;
                color: #666666;
            }
        """)
        self.save_button.clicked.connect(self.save_results)
        button_layout.addWidget(self.save_button)
        
        self.close_button = QPushButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å")
        self.close_button.setMinimumHeight(35)
        self.close_button.setStyleSheet("""
            QPushButton {
                background-color: #f44336;
                color: white;
                font-weight: bold;
                font-size: 10pt;
                border: none;
                border-radius: 5px;
                padding: 5px 15px;
            }
            QPushButton:hover {
                background-color: #da190b;
            }
            QPushButton:pressed {
                background-color: #c41e3a;
            }
        """)
        self.close_button.clicked.connect(self.close)
        button_layout.addWidget(self.close_button)
        
        layout.addLayout(button_layout)
        
        self.setLayout(layout)
    
    def start_check(self):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É DNS"""
        if self.thread and self.thread.isRunning():
            return
            
        self.result_text.clear()
        self.check_button.setEnabled(False)
        self.save_button.setEnabled(False)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        self.progress_bar.setVisible(True)
        self.progress_bar.setRange(0, 0)  # –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        self.status_label.setText("üîÑ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ DNS...")
        self.status_label.setStyleSheet("font-weight: bold; color: #2196F3;")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫ –∏ worker
        self.thread = QThread()
        self.worker = DNSCheckWorker()
        self.worker.moveToThread(self.thread)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.thread.started.connect(self.worker.run)
        self.worker.update_signal.connect(self.append_result)
        self.worker.finished_signal.connect(self.on_check_finished)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º
        self.thread.start()
    
    def append_result(self, text):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        if "‚úÖ" in text:
            color = "#4CAF50"
        elif "‚ùå" in text:
            color = "#f44336"
        elif "‚ö†Ô∏è" in text:
            color = "#ff9800"
        elif "üö´" in text:
            color = "#e91e63"
        elif "üîç" in text or "üìä" in text:
            color = "#2196F3"
        elif "=" in text and len(text) > 20:
            color = "#666666"
        else:
            color = "#d4d4d4"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        formatted_text = f'<span style="color: {color};">{text}</span>'
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
        cursor = self.result_text.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        cursor.insertHtml(formatted_text + "<br>")
        
        # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞
        self.result_text.verticalScrollBar().setValue(
            self.result_text.verticalScrollBar().maximum()
        )
    
    def on_check_finished(self, results):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
        self.check_button.setEnabled(True)
        self.save_button.setEnabled(True)
        self.progress_bar.setVisible(False)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        if results and results.get('summary', {}).get('dns_poisoning_detected'):
            self.status_label.setText("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ DNS –ø–æ–¥–º–µ–Ω–∞!")
            self.status_label.setStyleSheet("font-weight: bold; color: #f44336;")
        else:
            self.status_label.setText("‚úÖ DNS –ø–æ–¥–º–µ–Ω—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
            self.status_label.setStyleSheet("font-weight: bold; color: #4CAF50;")
        
        # –û—á–∏—Å—Ç–∫–∞ –ø–æ—Ç–æ–∫–∞
        if self.thread:
            self.thread.quit()
            self.thread.wait()
            self.thread.deleteLater()
            self.thread = None
        
        if self.worker:
            self.worker.deleteLater()
            self.worker = None
    
    def save_results(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª"""
        from PyQt6.QtWidgets import QFileDialog, QMessageBox
        from datetime import datetime
        import os
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        default_filename = f"dns_check_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        file_path, _ = QFileDialog.getSaveFileName(
            self,
            "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã DNS –ø—Ä–æ–≤–µ—Ä–∫–∏",
            default_filename,
            "Text Files (*.txt);;All Files (*.*)"
        )
        
        if file_path:
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –±–µ–∑ HTML —Ç–µ–≥–æ–≤
                plain_text = self.result_text.toPlainText()
                
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write("DNS CHECK RESULTS\n")
                    f.write(f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
                    f.write("=" * 60 + "\n\n")
                    f.write(plain_text)
                
                QMessageBox.information(
                    self,
                    "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ",
                    f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:\n{file_path}"
                )
                
                # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫—É —Å —Ñ–∞–π–ª–æ–º
                os.startfile(os.path.dirname(file_path))
                
            except Exception as e:
                QMessageBox.critical(
                    self,
                    "–û—à–∏–±–∫–∞",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª:\n{str(e)}"
                )
    
    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ç–æ–∫ –µ—Å–ª–∏ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç
        if self.thread and self.thread.isRunning():
            self.thread.quit()
            self.thread.wait()
        
        event.accept()

    def add_quick_check_button(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ DNS"""
        quick_check_btn = QPushButton("‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ DNS")
        quick_check_btn.clicked.connect(self.quick_dns_check)
        # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É –∫–Ω–æ–ø–∫—É –≤ layout

    def quick_dns_check(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –±—ã—Å—Ç—Ä—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ DNS"""
        self.result_text.clear()
        self.append_result("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–û–ì–û DNS")
        self.append_result("=" * 40)
        
        test_domains = {
            'YouTube': 'www.youtube.com',
            'Discord': 'discord.com',
            'Google': 'google.com'
        }
        
        for name, domain in test_domains.items():
            try:
                ip = socket.gethostbyname(domain)
                self.append_result(f"{name} ({domain}): {ip} ‚úÖ")
            except Exception as e:
                self.append_result(f"{name} ({domain}): ‚ùå –û—à–∏–±–∫–∞: {e}")