import sys
from PyQt6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, 
                           QLineEdit, QProgressBar, QMessageBox, QGroupBox, QWidget, 
                           QFrame, QInputDialog, QSizePolicy, QStackedWidget)
from PyQt6.QtCore import Qt, QThread, pyqtSignal, QTimer
from PyQt6.QtGui import QFont, QPixmap, QIcon, QPalette
from log import log
import pyperclip, webbrowser
from donater import DonateChecker

from typing import Tuple, Optional

class SubscriptionCheckWorker(QThread):
    """–†–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    finished = pyqtSignal(dict)  # —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
    
    def __init__(self, donate_checker, email):
        super().__init__()
        self.donate_checker = donate_checker
        self.email = email
        
    def run(self):
        try:
            result = self.donate_checker.check_user_subscription(self.email)
            self.finished.emit(result)
        except Exception as e:
            self.finished.emit({
                'found': False,
                'level': '‚Äì',
                'days_remaining': None,
                'status': f'–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {str(e)}',
                'auto_payment': False
            })

class SubscriptionDialog(QDialog):
    def __init__(self, parent):
        super().__init__(parent)
        self.donate_checker = DonateChecker()
        self.current_email = None
        self.setWindowTitle("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π")
        self.setMinimumSize(500, 550)
        self.setModal(True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É
        self.is_dark_theme = self.is_dark_theme_active()
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–µ–∫–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
        self.stack = QStackedWidget()
        self.email_page = QWidget()
        self.main_page = QWidget()
        
        self.stack.addWidget(self.email_page)  # index 0
        self.stack.addWidget(self.main_page)   # index 1
        
        root_layout = QVBoxLayout(self)
        root_layout.setContentsMargins(0, 0, 0, 0)
        root_layout.addWidget(self.stack)
        
        # –°—Ç—Ä–æ–∏–º –æ–±–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –û–î–ò–ù —Ä–∞–∑
        self.init_email_input_ui()
        self.init_main_ui()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π email –∏ —Ä–µ—à–∞–µ–º –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∫–∞–∑–∞—Ç—å
        saved_email = self.donate_checker.get_email_from_registry()
        if saved_email:
            self.current_email = saved_email
            self.stack.setCurrentIndex(1)  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            self.start_subscription_check()
        else:
            self.stack.setCurrentIndex(0)  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–≤–æ–¥–∞ email
            
        # –ü–æ–¥–≥–æ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –µ–≥–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—Ä–æ–∂–∞–Ω–∏—è
        self.adjustSize()
        QTimer.singleShot(100, self.fix_window_size)  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É        
    def fix_window_size(self):
        """–§–∏–∫—Å–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—Ä–æ–∂–∞–Ω–∏—è"""
        self.adjustSize()
        self.setFixedSize(self.size())
        
    def is_dark_theme_active(self):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞"""
        palette = self.palette()
        bg_color = palette.color(QPalette.ColorRole.Window)
        return bg_color.lightness() < 128
        
    def get_theme_styles(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã"""
        if self.is_dark_theme:
            return {
                'bg_color': '#2b2b2b',
                'text_color': '#ffffff',
                'border_color': '#555555',
                'input_bg': '#404040',
                'input_text': '#ffffff',
                'info_bg': '#1e3a5f',
                'info_border': '#4a90e2',
                'success_bg': '#1e4d3a',
                'success_border': '#4caf50',
                'success_text': '#4caf50',
                'error_bg': '#4d1e1e',
                'error_border': '#f44336',
                'error_text': '#f44336',
                'group_bg': '#383838'
            }
        else:
            return {
                'bg_color': '#ffffff',
                'text_color': '#000000',
                'border_color': '#cccccc',
                'input_bg': '#f0f0f0',
                'input_text': '#000000',
                'info_bg': '#e7f3ff',
                'info_border': '#b3d9ff',
                'success_bg': '#d4edda',
                'success_border': '#c3e6cb',
                'success_text': '#155724',                'error_bg': '#f8d7da',
                'error_border': '#f5c6cb',
                'error_text': '#721c24',
                'group_bg': '#f8f9fa'
            }

    def init_email_input_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç UI –¥–ª—è –≤–≤–æ–¥–∞ email"""
        layout = QVBoxLayout(self.email_page)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(15)
        
        styles = self.get_theme_styles()
        
        self.email_page.setStyleSheet(f"""
            QWidget {{
                background-color: {styles['bg_color']};
                color: {styles['text_color']};
            }}
        """)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("üîê Zapret Premium")
        title_font = QFont()
        title_font.setPointSize(20)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(title_label)
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        info_label = QLabel(
            "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø:\n\n"
            "1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ Boosty –∏ –ø—Ä–∏–≤—è–∂–∏—Ç–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Ç—É–¥–∞ –ø–æ—á—Ç—É!\n"
            "2. –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ª—é–±–æ–π –ø–µ—Ä–∏–æ–¥\n"
            "3. –î–æ–±–∞–≤—å—Ç–µ—Å—å –≤ Telegram —á–∞—Ç\n"            "4. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –ø–æ—á—Ç–µ\n\n"
            "–í–≤–µ–¥–∏—Ç–µ email, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–∞ Boosty:"
        )
        info_label.setAlignment(Qt.AlignmentFlag.AlignLeft)
        info_label.setWordWrap(True)
        info_label.setFixedHeight(180)
        info_label.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        info_label.setStyleSheet(f"""
            QLabel {{
                color: {styles['text_color']};
                padding: 15px;
                background-color: {styles['group_bg']};
                border: 1px solid {styles['border_color']};
                border-radius: 8px;
                font-size: 12px;
            }}
        """)
        info_label.setAutoFillBackground(True)
        self.info_label = info_label
        layout.addWidget(info_label)
        
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ email
        self.email_input = QLineEdit()
        self.email_input.setPlaceholderText("example@email.com")
        self.email_input.setStyleSheet(f"""
            QLineEdit {{
                background-color: {styles['input_bg']};
                color: {styles['input_text']};
                border: 2px solid {styles['border_color']};
                border-radius: 8px;
                padding: 12px;
                font-size: 14px;
            }}
            QLineEdit:focus {{
                border-color: #2196F3;
            }}
        """)
        layout.addWidget(self.email_input)
        
        # –ö–Ω–æ–ø–∫–∞ Boosty
        boosty_btn = QPushButton("üöÄ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Boosty")
        boosty_btn.clicked.connect(self.open_boosty)
        boosty_btn.setStyleSheet(f"""
            QPushButton {{
                background-color: #FF6900;
                color: white;
                border: none;
                border-radius: 6px;
                padding: 12px 20px;
                font-size: 12px;
                font-weight: bold;
                min-height: 20px;
            }}
            QPushButton:hover {{
                background-color: #E55A00;
            }}
            QPushButton:pressed {{
                background-color: #CC5100;
            }}
        """)
        layout.addWidget(boosty_btn)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_layout = QHBoxLayout()
        
        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")
        cancel_btn.clicked.connect(self.reject)
        cancel_btn.setStyleSheet(f"""
            QPushButton {{
                background-color: {styles['border_color']};
                color: {styles['text_color']};
                border: 1px solid {styles['border_color']};
                border-radius: 6px;
                padding: 12px 20px;
                font-size: 12px;
                min-height: 20px;
            }}
            QPushButton:hover {{
                background-color: {styles['input_bg']};
            }}
        """)
        
        save_btn = QPushButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
        save_btn.setDefault(True)
        save_btn.clicked.connect(self.save_email_and_continue)
        save_btn.setStyleSheet(f"""
            QPushButton {{
                background-color: #2196F3;
                color: white;
                border: none;
                border-radius: 6px;
                padding: 12px 20px;
                font-size: 12px;
                font-weight: bold;
                min-height: 20px;
            }}
            QPushButton:hover {{
                background-color: #1976D2;
            }}
            QPushButton:pressed {{
                background-color: #1565C0;
            }}
        """)
        
        buttons_layout.addWidget(cancel_btn)
        buttons_layout.addWidget(save_btn)
        layout.addLayout(buttons_layout)        
        self.email_input.setFocus()

    def init_main_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π UI –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ email"""

        main_layout = QVBoxLayout(self.main_page)
        main_layout.setContentsMargins(20, 15, 20, 15)
        main_layout.setSpacing(10)
        
        styles = self.get_theme_styles()
        
        self.main_page.setStyleSheet(f"""
            QWidget {{
                background-color: {styles['bg_color']};
                color: {styles['text_color']};
            }}
            QGroupBox {{
                font-weight: bold;
                border: 1px solid {styles['border_color']};
                border-radius: 8px;
                margin-top: 12px;
                padding-top: 15px;
                background-color: {styles['group_bg']};
            }}
            QGroupBox::title {{
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 10px 0 10px;
                color: {styles['text_color']};
            }}
        """)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header_layout = QHBoxLayout()
        header_layout.setSpacing(10)
        
        icon_label = QLabel("üîê")
        icon_label.setStyleSheet("font-size: 24px;")
        header_layout.addWidget(icon_label)
        
        title_label = QLabel("–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ Zapret Premium")
        title_font = QFont()
        title_font.setPointSize(14)
        title_font.setBold(True)
        title_label.setFont(title_font)
        header_layout.addWidget(title_label)
        header_layout.addStretch()
        
        main_layout.addLayout(header_layout)
          # –ì—Ä—É–ø–ø–∞ email
        email_group = QGroupBox("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        email_layout = QVBoxLayout(email_group)
        email_layout.setContentsMargins(10, 20, 10, 10)
        
        self.email_display = QLineEdit()
        self.email_display.setText(self.current_email)
        self.email_display.setReadOnly(True)
        self.email_display.setStyleSheet(f"""
            QLineEdit {{
                background-color: {styles['input_bg']};
                color: {styles['input_text']};
                border: 1px solid {styles['border_color']};
                border-radius: 4px;
                padding: 8px;
                font-size: 12px;
            }}
        """)
        email_layout.addWidget(self.email_display)
        
        change_email_btn = QPushButton("–ò–∑–º–µ–Ω–∏—Ç—å email")
        change_email_btn.clicked.connect(self.change_email)
        change_email_btn.setStyleSheet(f"""
            QPushButton {{
                background-color: {styles['border_color']};
                color: {styles['text_color']};
                border: 1px solid {styles['border_color']};
                border-radius: 4px;
                padding: 6px 12px;
                font-size: 11px;
                margin-top: 5px;
            }}
            QPushButton:hover {{
                background-color: {styles['input_bg']};
            }}
        """)
        email_layout.addWidget(change_email_btn)
        
        main_layout.addWidget(email_group)
        
        # –ì—Ä—É–ø–ø–∞ —Å—Ç–∞—Ç—É—Å–∞
        status_group = QGroupBox("–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏")
        status_layout = QVBoxLayout(status_group)
        status_layout.setContentsMargins(10, 20, 10, 10)
        
        self.status_text = QLabel("–ü—Ä–æ–≤–µ—Ä—è—é...")
        self.status_text.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.status_text.setWordWrap(True)
        self.status_text.setFixedHeight(80)
        self.status_text.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        
        self.status_text.setStyleSheet(f"""
            QLabel {{
                background-color: {styles['input_bg']};
                color: {styles['text_color']};
                border: 2px solid {styles['border_color']};
                padding: 15px;
                border-radius: 6px;
                font-size: 12px;
            }}
        """)
        self.status_text.setAutoFillBackground(True)

        status_layout.addWidget(self.status_text)
        
        self.progress_bar = QProgressBar()
        self.progress_bar.setRange(0, 0)
        self.progress_bar.setFixedHeight(6)
        self.progress_bar.setTextVisible(False)   # —á—Ç–æ–±—ã —à–∏—Ä–∏–Ω–∞ –Ω–µ –ø–ª—è—Å–∞–ª–∞
        self.progress_bar.setStyleSheet(f"""
            QProgressBar {{
                border: none;
                border-radius: 3px;
                background-color: {styles['input_bg']};
            }}
            QProgressBar::chunk {{
                background-color: #2196F3;
                border-radius: 3px;
            }}
        """)
        status_layout.addWidget(self.progress_bar)
        main_layout.addWidget(status_group)
        
        # –ì—Ä—É–ø–ø–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        info_group = QGroupBox("–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø")
        info_layout = QVBoxLayout(info_group)
        info_layout.setContentsMargins(10, 20, 10, 10)
        
        info_text = QLabel(            "1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ Boosty –∏ –ø—Ä–∏–≤—è–∂–∏—Ç–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Ç—É–¥–∞ –ø–æ—á—Ç—É! –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.\n"
            "2. –î–æ–±–∞–≤—å—Ç–µ—Å—å –≤ Telegram —á–∞—Ç\n"
            "3. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –ø–æ—á—Ç–µ"
        )
        info_text.setWordWrap(True)
        info_text.setFixedHeight(80)
        info_text.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        info_text.setStyleSheet(f"""
            QLabel {{
                color: {styles['text_color']};
                padding: 8px;
                font-size: 11px;
            }}
        """)
        info_text.setAutoFillBackground(True)
        self.info_text = info_text
        info_layout.addWidget(info_text)
        
        # –ö–Ω–æ–ø–∫–∞ Boosty
        boosty_btn = QPushButton("üöÄ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Boosty")
        boosty_btn.clicked.connect(self.open_boosty)
        info_layout.addWidget(boosty_btn)

        main_layout.addWidget(info_group)
        
        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_panel = QWidget()
        control_layout = QHBoxLayout(control_panel)
        control_layout.setContentsMargins(0, 10, 0, 0)
        control_layout.setSpacing(10)

        refresh_btn = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
        refresh_btn.clicked.connect(self.refresh_subscription)

        close_btn = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        close_btn.clicked.connect(self.accept)

        control_layout.addWidget(refresh_btn)
        control_layout.addStretch()
        control_layout.addWidget(close_btn)

        main_layout.addWidget(control_panel)
        main_layout.addStretch()

    def save_email_and_continue(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç email –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É UI"""
        email = self.email_input.text().strip()
        
        if not email:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ email")
            return
        
        # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
        if '@' not in email or '.' not in email:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email")
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–µ–µ—Å—Ç—Ä
        if self.donate_checker.save_email_to_registry(email):
            self.current_email = email
            self.email_display.setText(email)
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            self.stack.setCurrentIndex(1)
            self.start_subscription_check()
        else:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å email")

    def change_email(self):
        """–ò–∑–º–µ–Ω—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π email"""
        email, ok = QInputDialog.getText(self, "–ò–∑–º–µ–Ω–∏—Ç—å email", 
                                       "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email:", 
                                       text=self.current_email)
        if ok and email.strip():
            email = email.strip()
            if '@' not in email or '.' not in email:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email")
                return
                
            if self.donate_checker.save_email_to_registry(email):
                self.current_email = email
                self.email_display.setText(email)
                self.start_subscription_check()
            else:
                QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å email")

    def open_boosty(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Boosty"""
        try:
            boosty_url = "https://boosty.to/censorliber"
            webbrowser.open(boosty_url)
            log(f"–û—Ç–∫—Ä—ã—Ç–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ Boosty: {boosty_url}", level="INFO")
            
            QMessageBox.information(self, "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ Boosty", 
                                "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.\n\n"
                                "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ü–†–ò–í–Ø–ñ–ò–¢–ï email –ö –°–í–û–ï–ú–£ –ê–ö–ö–ê–£–ù–¢–£, "
                                "–∑–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å'. –°—Ç–∞—Ç—É—Å –≤—ã–¥–∞—ë—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤.")
            
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ Boosty: {e}", level="ERROR")
            QMessageBox.information(self, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É", 
                                "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä.\n\n"
                                "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:\n"
                                "https://boosty.to/censorliber")

    def on_subscription_checked(self, result):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
        self.progress_bar.setVisible(False)
        styles = self.get_theme_styles()
        
        if result['found']:
            if result['days_remaining'] is not None and result['days_remaining'] > 0:
                # –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
                status_text = f"‚úÖ {result['status']}\n–£—Ä–æ–≤–µ–Ω—å: {result['level']}"
                self.status_text.setStyleSheet(f"""
                    QLabel {{
                        background-color: {styles['success_bg']};
                        border: 2px solid {styles['success_border']};
                        color: {styles['success_text']};
                        padding: 15px;
                        border-radius: 6px;
                        font-size: 12px;
                        font-weight: bold;
                    }}
                """)
            elif "–≤–∫–ª—é—á–µ–Ω" in result['status'].lower():
                # –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–æ–º
                status_text = f"‚úÖ {result['status']}\n–£—Ä–æ–≤–µ–Ω—å: {result['level']}"
                self.status_text.setStyleSheet(f"""
                    QLabel {{
                        background-color: {styles['success_bg']};
                        border: 2px solid {styles['success_border']};
                        color: {styles['success_text']};
                        padding: 15px;
                        border-radius: 6px;
                        font-size: 12px;
                        font-weight: bold;
                    }}
                """)
            else:
                # –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
                status_text = f"‚ö†Ô∏è {result['status']}\n–£—Ä–æ–≤–µ–Ω—å: {result['level']}"
                self.status_text.setStyleSheet(f"""
                    QLabel {{
                        background-color: {styles['error_bg']};
                        border: 2px solid {styles['error_border']};
                        color: {styles['error_text']};
                        padding: 15px;
                        border-radius: 6px;
                        font-size: 12px;
                        font-weight: bold;
                    }}
                """)
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
            status_text = f"‚ùå {result['status']}"
            self.status_text.setStyleSheet(f"""
                QLabel {{
                    background-color: {styles['error_bg']};
                    border: 2px solid {styles['error_border']};
                    color: {styles['error_text']};
                    padding: 15px;
                    border-radius: 6px;
                    font-size: 12px;
                    font-weight: bold;
                }}
            """)
        
        self.status_text.setText(status_text)
        log(f"–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è {self.current_email}: {result['status']}", level="INFO")
        
    def start_subscription_check(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        if not self.current_email:
            return
            
        try:
            log(f"–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è {self.current_email}", level="DEBUG")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            self.progress_bar.setVisible(True)
            self.status_text.setText("–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏...")
            
            # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º worker
            self.worker = SubscriptionCheckWorker(self.donate_checker, self.current_email)
            self.worker.finished.connect(self.on_subscription_checked)
            self.worker.start()
            
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}", level="ERROR")
            self.progress_bar.setVisible(False)
            self.status_text.setText(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {str(e)}")

    def refresh_subscription(self):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏"""
        log("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏", level="INFO")
        self.start_subscription_check()