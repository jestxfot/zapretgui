# altmenu/app_menubar.py

from PyQt6.QtWidgets import QMenuBar, QWidget, QMessageBox, QApplication
from PyQt6.QtGui     import QKeySequence, QAction
from PyQt6.QtCore    import Qt, QThread, QSettings
import webbrowser

from config import APP_VERSION, get_dpi_autostart, set_dpi_autostart # build_info moved to config/__init__.py
from config.urls import INFO_URL
from .about_dialog import AboutDialog
from .defender_manager import WindowsDefenderManager
from .max_blocker import MaxBlockerManager

from utils import run_hidden
from log import log, LogViewerDialog, global_logger

from startup import get_remove_windows_terminal, set_remove_windows_terminal

class AppMenuBar(QMenuBar):
    """
    –í–µ—Ä—Ö–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –º–µ–Ω—é (¬´Alt-–º–µ–Ω—é¬ª).
    """

    def __init__(self, parent: QWidget | None = None):
        super().__init__(parent)
        self._pw = parent
        self._settings = QSettings("ZapretGUI", "Zapret") # –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self._set_status = getattr(parent, "set_status", lambda *_: None)

        # -------- 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -------------------------------------------------
        file_menu = self.addMenu("&–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

        # –ß–µ–∫-–±–æ–∫—Å –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ DPI¬ª
        self.auto_dpi_act = QAction("–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ DPI", self, checkable=True)
        self.auto_dpi_act.setChecked(get_dpi_autostart())
        self.auto_dpi_act.toggled.connect(self.toggle_dpi_autostart)
        file_menu.addAction(self.auto_dpi_act)

        self.force_dns_act = QAction("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π DNS 9.9.9.9", self, checkable=True)
        self.force_dns_act.setChecked(self._get_force_dns_enabled())
        self.force_dns_act.toggled.connect(self.toggle_force_dns)
        file_menu.addAction(self.force_dns_act)

        self.clear_cache = file_menu.addAction("–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É")
        self.clear_cache.triggered.connect(self.clear_startup_cache)

        file_menu.addSeparator()

        # Windows Defender
        file_menu.addSeparator()
        self.defender_act = QAction("–û—Ç–∫–ª—é—á–∏—Ç—å Windows Defender", self, checkable=True)
        self.defender_act.setChecked(self._get_defender_disabled())
        self.defender_act.toggled.connect(self.toggle_windows_defender)
        file_menu.addAction(self.defender_act)

        self.remove_wt_act = QAction("–£–¥–∞–ª—è—Ç—å Windows Terminal", self, checkable=True)
        self.remove_wt_act.setChecked(get_remove_windows_terminal())
        self.remove_wt_act.toggled.connect(self.toggle_remove_windows_terminal)
        file_menu.addAction(self.remove_wt_act)

        # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ MAX
        self.block_max_act = QAction("–ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É MAX", self, checkable=True)
        self.block_max_act.setChecked(self._get_max_blocked())
        self.block_max_act.toggled.connect(self.toggle_max_blocker)
        file_menu.addAction(self.block_max_act)

        file_menu.addSeparator()

        act_exit = QAction("–°–∫—Ä—ã—Ç—å GUI –≤ —Ç—Ä–µ–π", self, shortcut=QKeySequence("Ctrl+Q"))
        act_exit.triggered.connect(parent.close)
        file_menu.addAction(act_exit)

        full_exit_act = QAction("–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–π—Ç–∏", self, shortcut=QKeySequence("Ctrl+Shift+Q"))
        full_exit_act.triggered.connect(self.full_exit)
        file_menu.addAction(full_exit_act)

        """
        # === –•–û–°–¢–õ–ò–°–¢–´ ===
        hostlists_menu = self.addMenu("&–•–æ—Å—Ç–ª–∏—Å—Ç—ã")
        
        update_exclusions_action = QAction("–û–±–Ω–æ–≤–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞", self)
        update_exclusions_action.triggered.connect(self._update_exclusions)
        hostlists_menu.addAction(update_exclusions_action)
        
        exclude_sites_action = QAction("–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –¥–æ–º–µ–Ω –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏—è", self)
        exclude_sites_action.triggered.connect(self._exclude_custom_sites)
        hostlists_menu.addAction(exclude_sites_action)
        
        hostlists_menu.addSeparator()
        
        update_custom_sites_action = QAction("–û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å–∞–π—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞", self)
        update_custom_sites_action.triggered.connect(self._update_custom_sites)
        hostlists_menu.addAction(update_custom_sites_action)
        
        add_custom_sites_action = QAction("–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –¥–æ–º–µ–Ω –≤ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å–∞–π—Ç—ã", self)
        add_custom_sites_action.triggered.connect(self._add_custom_sites)
        hostlists_menu.addAction(add_custom_sites_action)
        
        hostlists_menu.addSeparator()
        """

        # -------- 2. ¬´–¢–µ–ª–µ–º–µ—Ç—Ä–∏—è / –ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª ------------------------------
        telemetry_menu = self.addMenu("&–¢–µ–ª–µ–º–µ—Ç—Ä–∏—è")

        # 2 –ü–æ–∫–∞–∑ –∂—É—Ä–Ω–∞–ª–∞
        act_logs = QAction("–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥-—Ñ–∞–π–ª", self)
        act_logs.triggered.connect(self.show_logs)
        telemetry_menu.addAction(act_logs)

        act_logs = QAction("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥ —Ñ–∞–π–ª", self)
        act_logs.triggered.connect(self.send_log_to_tg)
        telemetry_menu.addAction(act_logs)

        # -------- 3. ¬´–°–ø—Ä–∞–≤–∫–∞¬ª ---------------------------------------------
        help_menu = self.addMenu("&–°–ø—Ä–∞–≤–∫–∞")

        act_help = QAction("‚ùì –ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ? (–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ)", self)
        act_help.triggered.connect(self.open_info)
        help_menu.addAction(act_help)

        act_support = QAction("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ (–∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â—å)", self)
        act_support.triggered.connect(self.open_support)
        help_menu.addAction(act_support)

        act_about = QAction("‚Ñπ –û –ø—Ä–æ–≥—Ä–∞–º–º–µ‚Ä¶", self)
        act_about.triggered.connect(lambda: AboutDialog(parent).exec())
        help_menu.addAction(act_about)

        # -------- 4. ¬´–ê–Ω–¥—Ä–æ–∏–¥¬ª ---------------------------------------------
        android_menu = self.addMenu("&–ê–Ω–¥—Ä–æ–∏–¥")

        act_byedpi_info = QAction("–û ByeDPIAndroid", self)
        act_byedpi_info.triggered.connect(self.show_byedpi_info)
        android_menu.addAction(act_byedpi_info)

        act_byedpi_github = QAction("GitHub –ø—Ä–æ–µ–∫—Ç–∞", self)
        act_byedpi_github.triggered.connect(self.open_byedpi_github)
        android_menu.addAction(act_byedpi_github)

        act_byedpi_telegram = QAction("Telegram –≥—Ä—É–ø–ø–∞", self)
        act_byedpi_telegram.triggered.connect(self.open_byedpi_telegram)
        android_menu.addAction(act_byedpi_telegram)
        

    def _get_force_dns_enabled(self) -> bool:
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ DNS"""
        try:
            from dns import DNSForceManager
            manager = DNSForceManager()
            return manager.is_force_dns_enabled()
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è Force DNS: {e}", "‚ùå ERROR")
            return False

    def toggle_force_dns(self, enabled: bool):
        """
        –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É DNS 9.9.9.9
        """

        from dns import DNSForceManager
        
        try:
            manager = DNSForceManager(status_callback=self._set_status)
            
            if enabled:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º
                msg_box = QMessageBox(self._pw)
                msg_box.setWindowTitle("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π DNS")
                msg_box.setIcon(QMessageBox.Icon.Warning)
                msg_box.setText(
                    "–í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É DNS 9.9.9.9?\n\n"
                    "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑–º–µ–Ω–∏—Ç DNS-—Å–µ—Ä–≤–µ—Ä—ã –Ω–∞ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö "
                    "—Å–µ—Ç–µ–≤—ã—Ö –∞–¥–∞–ø—Ç–µ—Ä–∞—Ö (Ethernet –∏ Wi-Fi)."
                )
                msg_box.setInformativeText(
                    "DNS-—Å–µ—Ä–≤–µ—Ä 9.9.9.9 (Quad9) –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç:\n"
                    "‚Ä¢ –ó–∞—â–∏—Ç—É –æ—Ç –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤\n"
                    "‚Ä¢ –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤\n"
                    "‚Ä¢ –û–±—Ö–æ–¥ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫\n\n"
                    "–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è."
                )
                msg_box.setStandardButtons(
                    QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
                )
                msg_box.setDefaultButton(QMessageBox.StandardButton.No)
                
                if msg_box.exec() != QMessageBox.StandardButton.Yes:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª - –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
                    self.force_dns_act.blockSignals(True)
                    self.force_dns_act.setChecked(False)
                    self.force_dns_act.blockSignals(False)
                    return
                
                # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö DNS
                self._set_status("–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ DNS...")
                manager.backup_current_dns()
                
                # –í–∫–ª—é—á–∞–µ–º –æ–ø—Ü–∏—é –≤ —Ä–µ–µ—Å—Ç—Ä–µ
                manager.set_force_dns_enabled(True)
                
                # –ü—Ä–∏–º–µ–Ω—è–µ–º DNS
                self._set_status("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ DNS 9.9.9.9...")
                success, total = manager.force_dns_on_all_adapters()
                
                if success > 0:
                    QMessageBox.information(
                        self._pw, 
                        "DNS —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
                        f"DNS 9.9.9.9 —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {success} –∏–∑ {total} –∞–¥–∞–ø—Ç–µ—Ä–æ–≤.\n\n"
                        "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ."
                    )
                    log(f"–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π DNS –≤–∫–ª—é—á–µ–Ω: {success}/{total} –∞–¥–∞–ø—Ç–µ—Ä–æ–≤", "INFO")
                else:
                    QMessageBox.warning(
                        self._pw,
                        "–û—à–∏–±–∫–∞",
                        "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DNS –Ω–∏ –Ω–∞ –æ–¥–Ω–æ–º –∞–¥–∞–ø—Ç–µ—Ä–µ.\n"
                        "–í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
                    )
                    # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                    manager.set_force_dns_enabled(False)
                    self.force_dns_act.blockSignals(True)
                    self.force_dns_act.setChecked(False)
                    self.force_dns_act.blockSignals(False)
                    
            else:
                # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ DNS
                msg_box = QMessageBox(self._pw)
                msg_box.setWindowTitle("–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ DNS")
                msg_box.setIcon(QMessageBox.Icon.Question)
                msg_box.setText("–ö–∞–∫ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π DNS?")
                
                restore_btn = msg_box.addButton("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏", QMessageBox.ButtonRole.AcceptRole)
                auto_btn = msg_box.addButton("–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", QMessageBox.ButtonRole.AcceptRole)
                cancel_btn = msg_box.addButton("–û—Ç–º–µ–Ω–∞", QMessageBox.ButtonRole.RejectRole)
                
                msg_box.setDefaultButton(restore_btn)
                msg_box.exec()
                
                clicked_btn = msg_box.clickedButton()
                
                if clicked_btn == cancel_btn:
                    # –û—Ç–º–µ–Ω–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–∞–ª–æ—á–∫—É
                    self.force_dns_act.blockSignals(True)
                    self.force_dns_act.setChecked(True)
                    self.force_dns_act.blockSignals(False)
                    return
                
                # –û—Ç–∫–ª—é—á–∞–µ–º –æ–ø—Ü–∏—é –≤ —Ä–µ–µ—Å—Ç—Ä–µ
                manager.set_force_dns_enabled(False)
                
                if clicked_btn == restore_btn:
                    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
                    self._set_status("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ DNS –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...")
                    if manager.restore_dns_from_backup():
                        QMessageBox.information(
                            self._pw,
                            "DNS –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
                            "DNS-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏."
                        )
                        log("DNS –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏", "INFO")
                    else:
                        QMessageBox.warning(
                            self._pw,
                            "–û—à–∏–±–∫–∞",
                            "–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DNS –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏.\n"
                            "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç —Å–±—Ä–æ—à–µ–Ω—ã –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ."
                        )
                        # Fallback - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ
                        self._reset_all_dns_to_auto(manager)
                        
                elif clicked_btn == auto_btn:
                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ
                    self._reset_all_dns_to_auto(manager)
                    
            self._set_status("–ì–æ—Ç–æ–≤–æ")
            
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ Force DNS: {e}", "‚ùå ERROR")
            QMessageBox.critical(
                self._pw,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ DNS:\n{e}"
            )
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
            self.force_dns_act.blockSignals(True)
            self.force_dns_act.setChecked(not enabled)
            self.force_dns_act.blockSignals(False)

    def _reset_all_dns_to_auto(self, manager):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç DNS –Ω–∞ –≤—Å–µ—Ö –∞–¥–∞–ø—Ç–µ—Ä–∞—Ö –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ"""
        self._set_status("–°–±—Ä–æ—Å DNS –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ...")
        adapters = manager.get_network_adapters()
        success_count = 0
        
        for adapter in adapters:
            if manager.reset_dns_to_auto(adapter):
                success_count += 1
        
        if success_count > 0:
            QMessageBox.information(
                self._pw,
                "DNS —Å–±—Ä–æ—à–µ–Ω",
                f"DNS —Å–±—Ä–æ—à–µ–Ω –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞ {success_count} –∏–∑ {len(adapters)} –∞–¥–∞–ø—Ç–µ—Ä–æ–≤."
            )
            log(f"DNS —Å–±—Ä–æ—à–µ–Ω –Ω–∞ –∞–≤—Ç–æ: {success_count}/{len(adapters)} –∞–¥–∞–ø—Ç–µ—Ä–æ–≤", "INFO")
        else:
            QMessageBox.warning(
                self._pw,
                "–û—à–∏–±–∫–∞",
                "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å DNS –Ω–∏ –Ω–∞ –æ–¥–Ω–æ–º –∞–¥–∞–ø—Ç–µ—Ä–µ."
            )

    def clear_startup_cache(self):
        """–û—á–∏—â–∞–µ—Ç –∫—ç—à –ø—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞–ø—É—Å–∫–∞"""
        from startup.check_cache import startup_cache
        try:
            startup_cache.invalidate_cache()
            QMessageBox.information(self._pw, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å–±—Ä–æ—à–µ–Ω—ã", 
                                  "–ö—ç—à –ø—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞–ø—É—Å–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.\n"
                                  "–ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∑–∞–Ω–æ–≤–æ.")
            log("–ö—ç—à –ø—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞–ø—É—Å–∫–∞ –æ—á–∏—â–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "INFO")
        except Exception as e:
            QMessageBox.warning(self._pw, "–û—à–∏–±–∫–∞", 
                              f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à: {e}")
            log(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: {e}", "‚ùå ERROR")

    def create_premium_menu(self):
        """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é Premium —Ñ—É–Ω–∫—Ü–∏–π"""
        premium_menu = self.addMenu("üíé Premium")
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π
        subscription_action = premium_menu.addAction("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π")
        subscription_action.triggered.connect(self._pw.show_subscription_dialog)
        
        premium_menu.addSeparator()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ
        server_info_action = premium_menu.addAction("‚öôÔ∏è –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞")
        server_info_action.triggered.connect(self._pw.get_boosty_server_info)

        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
        server_toggle_action = premium_menu.addAction("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
        server_toggle_action.triggered.connect(self._pw.toggle_boosty_server)

        premium_menu.addSeparator()
        
        telegram_action = premium_menu.addAction("üåê –û—Ç–∫—Ä—ã—Ç—å Telegram")
        telegram_action.triggered.connect(lambda: webbrowser.open("https://t.me/zapretvpns_bot"))
        
        return premium_menu

    # ==================================================================
    #  –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —á–µ–∫-–±–æ–∫—Å–æ–≤
    # ==================================================================
    def toggle_remove_windows_terminal(self, enabled: bool):
        """
        –í–∫–ª—é—á–∞–µ—Ç / –≤—ã–∫–ª—é—á–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ Windows Terminal –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
        """
        set_remove_windows_terminal(enabled)

        msg = ("Windows Terminal –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã"
               if enabled
               else "–£–¥–∞–ª–µ–Ω–∏–µ Windows Terminal –æ—Ç–∫–ª—é—á–µ–Ω–æ")
        self._set_status(msg)
        
        if not enabled:
            # –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            warning_msg = (
                "–í–Ω–∏–º–∞–Ω–∏–µ! Windows Terminal –º–æ–∂–µ—Ç –º–µ—à–∞—Ç—å —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n\n"
                "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π DPI-–æ–±—Ö–æ–¥–∞, "
                "—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å —ç—Ç—É –æ–ø—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ."
            )
            QMessageBox.warning(self._pw, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", warning_msg)
        else:
            QMessageBox.information(self._pw, "–£–¥–∞–ª–µ–Ω–∏–µ Windows Terminal", msg)

    def toggle_dpi_autostart(self, enabled: bool):
        set_dpi_autostart(enabled)

        msg = ("DPI –±—É–¥–µ—Ç –≤–∫–ª—é—á–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã"
               if enabled
               else "–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ DPI –æ—Ç–∫–ª—é—á–µ–Ω–∞")
        self._set_status(msg)
        QMessageBox.information(self._pw, "–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ DPI", msg)

    # ==================================================================
    #  –ü–æ–ª–Ω—ã–π –≤—ã—Ö–æ–¥ (—É–±–∏—Ä–∞–µ–º —Ç—Ä–µ–π +, –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º DPI)
    # ==================================================================

    def full_exit(self):
        # -----------------------------------------------------------------
        # 1. –î–∏–∞–ª–æ–≥ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –Ω–æ —Å –∞–Ω–≥–ª. –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏ –≤ —Ç–µ–∫—Å—Ç–µ
        # -----------------------------------------------------------------
        box = QMessageBox(self._pw)
        box.setWindowTitle("–í—ã—Ö–æ–¥")
        box.setIcon(QMessageBox.Icon.Question)

        # —Å–∞–º —Ç–µ–∫—Å—Ç –æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        box.setText(
            "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DPI-—Å–ª—É–∂–±—É –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º?\n"
            "–î–∞ ‚Äì –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DPI –∏ –≤—ã–π—Ç–∏\n"
            "–ù–µ—Ç  ‚Äì –≤—ã–π—Ç–∏, –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è DPI\n"
            "–û—Ç–º–µ–Ω–∞ ‚Äì –æ—Å—Ç–∞—Ç—å—Å—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ"
        )

        # –¥–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        box.setStandardButtons(
            QMessageBox.StandardButton.Yes |
            QMessageBox.StandardButton.No  |
            QMessageBox.StandardButton.Cancel
        )
        box.setDefaultButton(QMessageBox.StandardButton.Cancel)

        # ‚îÄ‚îÄ‚îÄ –†—É—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        box.button(QMessageBox.StandardButton.Yes).setText("–î–∞")
        box.button(QMessageBox.StandardButton.No).setText("–ù–µ—Ç")
        box.button(QMessageBox.StandardButton.Cancel).setText("–û—Ç–º–µ–Ω–∞")

        # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
        resp = box.exec()

        if resp == QMessageBox.StandardButton.Cancel:
            return                      # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª

        stop_dpi_required = resp == QMessageBox.StandardButton.Yes

        # -----------------------------------------------------------------
        # 2. –î–∞–ª—å—à–µ –ª–æ–≥–∏–∫–∞ –≤—ã—Ö–æ–¥–∞ (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
        # -----------------------------------------------------------------
        if stop_dpi_required:
            try:
                from dpi.stop import stop_dpi
                stop_dpi(self._pw)
            except Exception as e:
                QMessageBox.warning(
                    self._pw, "–û—à–∏–±–∫–∞ DPI",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DPI:\n{e}"
                )

        if hasattr(self._pw, "process_monitor") and self._pw.process_monitor:
            self._pw.process_monitor.stop()

        if hasattr(self._pw, "tray_manager"):
            self._pw.tray_manager.tray_icon.hide()

        self._pw._allow_close = True
        QApplication.quit()

    # ==================================================================
    #  –°–ø—Ä–∞–≤–∫–∞
    # ==================================================================
    def open_info(self):
        try:
            import webbrowser
            webbrowser.open(INFO_URL)
            self._set_status("–û—Ç–∫—Ä—ã–≤–∞—é —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ‚Ä¶")
        except Exception as e:
            err = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞: {e}"
            self._set_status(err)
            QMessageBox.warning(self._pw, "–û—à–∏–±–∫–∞", err)

    def open_support(self):
        try:
            import webbrowser
            webbrowser.open("https://t.me/zaprethelp")
            self._set_status("–û—Ç–∫—Ä—ã–≤–∞—é –ø–æ–¥–¥–µ—Ä–∂–∫—É...")
        except Exception as e:
            err = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {e}"
            self._set_status(err)
            QMessageBox.warning(self._pw, "–û—à–∏–±–∫–∞", err)

    def show_logs(self):
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ GUI.
        –î–µ—Ä–∂–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç, —á—Ç–æ–±—ã –µ–≥–æ –Ω–µ —É–¥–∞–ª–∏–ª —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞.
        """
        try:
            # –µ—Å–ª–∏ –æ–∫–Ω–æ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ ‚Äë –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–Ω–∏–º–∞–µ–º –µ–≥–æ
            if getattr(self, "_log_dlg", None) and self._log_dlg.isVisible():
                self._log_dlg.raise_()
                self._log_dlg.activateWindow()
                return

            self._log_dlg = LogViewerDialog(
                parent   = self._pw or self,
                log_file = global_logger.log_file,
            )
            self._log_dlg.show()                   # <<- –≤–º–µ—Å—Ç–æ exec()

        except Exception as e:
            from PyQt6.QtWidgets import QMessageBox
            QMessageBox.critical(self._pw or self,
                                "–û—à–∏–±–∫–∞",
                                f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∂—É—Ä–Ω–∞–ª:\n{e}")

    def send_log_to_tg(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—ã–π –ª–æ–≥ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤."""
        import time
        now = time.time()
        interval = 1 * 60  # 1 –º–∏–Ω—É—Ç–∞

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
        last = self._settings.value("last_full_log_send", 0.0, type=float)
        
        if now - last < interval:
            remaining = int((interval - (now - last)) // 60) + 1
            QMessageBox.information(self._pw, "–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤",
                f"–õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª—è–ª—Å—è –Ω–µ–¥–∞–≤–Ω–æ.\n"
                f"–°–ª–µ–¥—É—é—â–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ {remaining} –º–∏–Ω.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
        from tgram.tg_log_bot import check_bot_connection
        
        if not check_bot_connection():
            msg_box = QMessageBox(self._pw)
            msg_box.setWindowTitle("–ë–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setText(
                "–ë–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n\n"
                "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
                "1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather –≤ Telegram\n"
                "2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞\n"
                "3. –°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª/—á–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤\n"
                "4. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
                "5. –û–±–Ω–æ–≤–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª–µ tg_log_bot.py"
            )
            msg_box.exec()
            return

        # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        self._settings.setValue("last_full_log_send", now)

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ
        from tgram.tg_log_full import TgSendWorker
        from tgram.tg_log_delta import get_client_id
        import os

        # –ò–ó–ú–ï–ù–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –ª–æ–≥ —Ñ–∞–π–ª
        from log import global_logger
        LOG_PATH = global_logger.log_file if hasattr(global_logger, 'log_file') else None
        
        if not LOG_PATH or not os.path.exists(LOG_PATH):
            QMessageBox.warning(self._pw, "–û—à–∏–±–∫–∞", "–§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ–∞–π–ª–µ
        import platform
        log_filename = os.path.basename(LOG_PATH)
        caption = (
            f"üìã –†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–∞\n"
            f"üìÅ –§–∞–π–ª: {log_filename}\n"  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞
            f"Zapret v{APP_VERSION}\n"
            f"ID: {get_client_id()}\n"
            f"Host: {platform.node()}\n"
            f"Time: {time.strftime('%d.%m.%Y %H:%M:%S')}"
        )

        action = self.sender()
        if action:
            action.setEnabled(False)

        wnd = self._pw
        if hasattr(wnd, "set_status"):
            wnd.set_status("–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–∞...")

        # –°–æ–∑–¥–∞–µ–º –≤–æ—Ä–∫–µ—Ä —Å —Ñ–ª–∞–≥–æ–º use_log_bot=True
        thr = QThread(self)
        worker = TgSendWorker(LOG_PATH, caption, use_log_bot=True)
        worker.moveToThread(thr)
        thr.started.connect(worker.run)

        def _on_done(ok: bool, extra_wait: float, error_msg: str = ""):
            if ok:
                QMessageBox.information(wnd, "–£—Å–ø–µ—à–Ω–æ", 
                    "–õ–æ–≥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n"
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å –≤ —É–ª—É—á—à–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã!")
                if hasattr(wnd, "set_status"):
                    wnd.set_status("–õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            else:
                if extra_wait > 0:
                    QMessageBox.warning(wnd, "–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ",
                        f"–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã.\n"
                        f"–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ {int(extra_wait/60)} –º–∏–Ω—É—Ç.")
                else:
                    QMessageBox.warning(wnd, "–û—à–∏–±–∫–∞",
                        f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥.\n\n"
                        f"–ü—Ä–∏—á–∏–Ω–∞: {error_msg or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}\n\n"
                        f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
                
                if hasattr(wnd, "set_status"):
                    wnd.set_status("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞")
            
            # –û—á–∏—Å—Ç–∫–∞
            worker.deleteLater()
            thr.quit()
            thr.wait()
            if action:
                action.setEnabled(True)

        worker.finished.connect(_on_done)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Ç–æ–∫
        self._log_send_thread = thr
        thr.start()

    # ==================================================================
    #  –ê–Ω–¥—Ä–æ–∏–¥
    # ==================================================================
    def show_byedpi_info(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ ByeDPIAndroid"""
        info_text = """
        <h2>ByeDPIAndroid</h2>
        
        <p><b>ByeDPIAndroid</b> ‚Äî —ç—Ç–æ –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è DPI-–æ–±—Ö–æ–¥–∞ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ Android, 
        –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è Zapret GUI –¥–ª—è Windows.</p>
        
        <h3>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h3>
        <ul>
        <li>üîß –ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</li>
        <li>üõ°Ô∏è –û–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ —Å–∞–π—Ç–æ–≤ –Ω–∞ Android</li>
        <li>‚ö° –†–∞–±–æ—Ç–∞ –±–µ–∑ root-–¥–æ—Å—Ç—É–ø–∞</li>
        <li>üîÑ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
        <li>üí¨ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</li>
        </ul>
        
        <h3>–°—Å—ã–ª–∫–∏:</h3>
        <p>üì± <a href="https://github.com/romanvht/ByeDPIAndroid">GitHub –ø—Ä–æ–µ–∫—Ç–∞</a></p>
        <p>üí¨ <a href="https://t.me/byebyedpi_group">Telegram –≥—Ä—É–ø–ø–∞</a></p>
        
        <p><i>ByeDPIAndroid —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç Zapret GUI, 
        –Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ö–æ–∂–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã.</i></p>
        """
        
        msg_box = QMessageBox(self._pw)
        msg_box.setWindowTitle("ByeDPIAndroid")
        msg_box.setTextFormat(Qt.TextFormat.RichText)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º Qt.TextFormat
        msg_box.setText(info_text)
        msg_box.setIcon(QMessageBox.Icon.Information)
        msg_box.exec()

    def open_byedpi_github(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç GitHub –ø—Ä–æ–µ–∫—Ç–∞ ByeDPIAndroid"""
        try:
            webbrowser.open("https://github.com/romanvht/ByeDPIAndroid")
            self._set_status("–û—Ç–∫—Ä—ã–≤–∞—é GitHub ByeDPIAndroid...")
        except Exception as e:
            err = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ GitHub: {e}"
            self._set_status(err)
            QMessageBox.warning(self._pw, "–û—à–∏–±–∫–∞", err)

    def open_byedpi_telegram(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Telegram –≥—Ä—É–ø–ø—É ByeDPIAndroid"""
        try:
            webbrowser.open("https://t.me/byebyedpi_group")
            self._set_status("–û—Ç–∫—Ä—ã–≤–∞—é Telegram –≥—Ä—É–ø–ø—É ByeDPIAndroid...")
        except Exception as e:
            err = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ Telegram: {e}"
            self._set_status(err)
            QMessageBox.warning(self._pw, "–û—à–∏–±–∫–∞", err)

    def _get_defender_disabled(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ—Ç–∫–ª—é—á–µ–Ω –ª–∏ Windows Defender"""
        try:
            manager = WindowsDefenderManager()
            return manager.is_defender_disabled()
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è Windows Defender: {e}", "‚ùå ERROR")
            return False

    def toggle_windows_defender(self, disable: bool):
        """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç Windows Defender"""
        import ctypes
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not ctypes.windll.shell32.IsUserAnAdmin():
            QMessageBox.critical(
                self._pw,
                "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Windows Defender —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n"
                "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
            )
            # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
            self.defender_act.blockSignals(True)
            self.defender_act.setChecked(not disable)
            self.defender_act.blockSignals(False)
            return
        
        try:
            manager = WindowsDefenderManager(status_callback=self._set_status)
            
            if disable:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º
                msg_box = QMessageBox(self._pw)
                msg_box.setWindowTitle("–û—Ç–∫–ª—é—á–µ–Ω–∏–µ Windows Defender")
                msg_box.setIcon(QMessageBox.Icon.Warning)
                msg_box.setText(
                    "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å Windows Defender?\n\n"
                )
                msg_box.setInformativeText(
                    "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ Windows Defender:\n"
                    "‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç –∑–∞—â–∏—Ç—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
                    "‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç –æ–±–ª–∞—á–Ω—É—é –∑–∞—â–∏—Ç—É\n"
                    "‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –æ–±—Ä–∞–∑—Ü–æ–≤\n"
                    "‚Ä¢ –ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è\n\n"
                )
                msg_box.setStandardButtons(
                    QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
                )
                msg_box.setDefaultButton(QMessageBox.StandardButton.No)
                
                if msg_box.exec() != QMessageBox.StandardButton.Yes:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª - –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
                    self.defender_act.blockSignals(True)
                    self.defender_act.setChecked(False)
                    self.defender_act.blockSignals(False)
                    return
                
                # –û—Ç–∫–ª—é—á–∞–µ–º Defender
                self._set_status("–û—Ç–∫–ª—é—á–µ–Ω–∏–µ Windows Defender...")
                success, count = manager.disable_defender()
                
                if success:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                    from .defender_manager import set_defender_disabled
                    set_defender_disabled(True)
                    
                    QMessageBox.information(
                        self._pw,
                        "Windows Defender –æ—Ç–∫–ª—é—á–µ–Ω",
                        f"Windows Defender —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω.\n"
                        f"–ü—Ä–∏–º–µ–Ω–µ–Ω–æ {count} –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n\n"
                        "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞."
                    )
                    log(f"Windows Defender –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "‚ö†Ô∏è WARNING")
                else:
                    QMessageBox.critical(
                        self._pw,
                        "–û—à–∏–±–∫–∞",
                        "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å Windows Defender.\n"
                        "–í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã —Å–∏—Å—Ç–µ–º–æ–π."
                    )
                    # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                    self.defender_act.blockSignals(True)
                    self.defender_act.setChecked(False)
                    self.defender_act.blockSignals(False)
                    
            else:
                # –í–∫–ª—é—á–µ–Ω–∏–µ Windows Defender
                msg_box = QMessageBox(self._pw)
                msg_box.setWindowTitle("–í–∫–ª—é—á–µ–Ω–∏–µ Windows Defender")
                msg_box.setIcon(QMessageBox.Icon.Question)
                msg_box.setText(
                    "–í–∫–ª—é—á–∏—Ç—å Windows Defender –æ–±—Ä–∞—Ç–Ω–æ?\n\n"
                    "–≠—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç –∑–∞—â–∏—Ç—É –≤–∞—à–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞."
                )
                msg_box.setStandardButtons(
                    QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
                )
                msg_box.setDefaultButton(QMessageBox.StandardButton.Yes)
                
                if msg_box.exec() != QMessageBox.StandardButton.Yes:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–∞–ª–æ—á–∫—É
                    self.defender_act.blockSignals(True)
                    self.defender_act.setChecked(True)
                    self.defender_act.blockSignals(False)
                    return
                
                # –í–∫–ª—é—á–∞–µ–º Defender
                self._set_status("–í–∫–ª—é—á–µ–Ω–∏–µ Windows Defender...")
                success, count = manager.enable_defender()
                
                if success:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
                    from .defender_manager import set_defender_disabled
                    set_defender_disabled(False)
                    
                    QMessageBox.information(
                        self._pw,
                        "Windows Defender –≤–∫–ª—é—á–µ–Ω",
                        f"Windows Defender —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω.\n"
                        f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ {count} –æ–ø–µ—Ä–∞—Ü–∏–π.\n\n"
                        "–ó–∞—â–∏—Ç–∞ –≤–∞—à–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
                    )
                    log("Windows Defender –≤–∫–ª—é—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "‚úÖ INFO")
                else:
                    QMessageBox.warning(
                        self._pw,
                        "–ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö",
                        "Windows Defender –≤–∫–ª—é—á–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ.\n"
                        "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞."
                    )
                    
            self._set_status("–ì–æ—Ç–æ–≤–æ")
            
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ Windows Defender: {e}", "‚ùå ERROR")
            QMessageBox.critical(
                self._pw,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Windows Defender:\n{e}"
            )
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
            self.defender_act.blockSignals(True)
            self.defender_act.setChecked(not disable)
            self.defender_act.blockSignals(False)

    def _get_max_blocked(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ MAX"""
        try:
            from .max_blocker import is_max_blocked
            return is_max_blocked()
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ MAX: {e}", "‚ùå ERROR")
            return False

    def toggle_max_blocker(self, enable: bool):
        """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ–≥—Ä–∞–º–º—ã MAX"""
        try:
            manager = MaxBlockerManager(status_callback=self._set_status)
            
            if enable:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º
                msg_box = QMessageBox(self._pw)
                msg_box.setWindowTitle("–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ MAX")
                msg_box.setIcon(QMessageBox.Icon.Information)
                msg_box.setText(
                    "–í–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã MAX?\n\n"
                    "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:"
                )
                msg_box.setInformativeText(
                    "‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ max.exe, max.msi –∏ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ MAX\n"
                    "‚Ä¢ –°–æ–∑–¥–∞—Å—Ç —Ñ–∞–π–ª—ã-–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –ø–∞–ø–∫–∞—Ö —É—Å—Ç–∞–Ω–æ–≤–∫–∏\n"
                    "‚Ä¢ –î–æ–±–∞–≤–∏—Ç –ø—Ä–∞–≤–∏–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ Windows Firewall (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø—Ä–∞–≤)\n"
                    "‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ–º–µ–Ω—ã MAX –≤ —Ñ–∞–π–ª–µ hosts\n\n"
                    "–í –∏—Ç–æ–≥–µ –¥–∞–∂–µ –µ—Å–ª–∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä Max –ø–æ—Å—Ç–∞–≤–∏—Ç—å—Å—è –±—É–¥–µ—Ç —Ç—ë–º–Ω—ã–π —ç–∫—Ä–∞–Ω, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —á–µ–≥–æ –æ–Ω –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫, –±—É–¥—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–≤–æ–∏–º —Å–µ—Ä–≤–µ—Ä–∞–º."
                )
                msg_box.setStandardButtons(
                    QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
                )
                msg_box.setDefaultButton(QMessageBox.StandardButton.Yes)
                
                if msg_box.exec() != QMessageBox.StandardButton.Yes:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª - –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
                    self.block_max_act.blockSignals(True)
                    self.block_max_act.setChecked(False)
                    self.block_max_act.blockSignals(False)
                    return
                
                # –í–∫–ª—é—á–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
                success, message = manager.enable_blocking()
                
                if success:
                    QMessageBox.information(
                        self._pw,
                        "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞",
                        message
                    )
                    log("–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ MAX –≤–∫–ª—é—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "üõ°Ô∏è INFO")
                else:
                    QMessageBox.warning(
                        self._pw,
                        "–û—à–∏–±–∫–∞",
                        f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É:\n{message}"
                    )
                    # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
                    self.block_max_act.blockSignals(True)
                    self.block_max_act.setChecked(False)
                    self.block_max_act.blockSignals(False)
                    
            else:
                # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                msg_box = QMessageBox(self._pw)
                msg_box.setWindowTitle("–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ MAX")
                msg_box.setIcon(QMessageBox.Icon.Question)
                msg_box.setText(
                    "–û—Ç–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ–≥—Ä–∞–º–º—ã MAX?\n\n"
                    "–≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞."
                )
                msg_box.setStandardButtons(
                    QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
                )
                msg_box.setDefaultButton(QMessageBox.StandardButton.No)
                
                if msg_box.exec() != QMessageBox.StandardButton.Yes:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–∞–ª–æ—á–∫—É
                    self.block_max_act.blockSignals(True)
                    self.block_max_act.setChecked(True)
                    self.block_max_act.blockSignals(False)
                    return
                
                # –û—Ç–∫–ª—é—á–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
                success, message = manager.disable_blocking()
                
                if success:
                    QMessageBox.information(
                        self._pw,
                        "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞",
                        message
                    )
                    log("–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ MAX –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "‚úÖ INFO")
                else:
                    QMessageBox.warning(
                        self._pw,
                        "–û—à–∏–±–∫–∞",
                        f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É:\n{message}"
                    )
                    
            self._set_status("–ì–æ—Ç–æ–≤–æ")
            
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ MAX: {e}", "‚ùå ERROR")
            QMessageBox.critical(
                self._pw,
                "–û—à–∏–±–∫–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ MAX:\n{e}"
            )
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–∞–ª–æ—á–∫—É
            self.block_max_act.blockSignals(True)
            self.block_max_act.setChecked(not enable)
            self.block_max_act.blockSignals(False)