import sys
from PyQt6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QLabel, 
                            QPushButton, QTextEdit, QMessageBox, QApplication,
                            QProgressBar, QFrame, QLineEdit)
from PyQt6.QtCore import Qt, QThread, pyqtSignal, QTimer
from PyQt6.QtGui import QFont, QPixmap, QIcon, QPalette
from log import log
import pyperclip, webbrowser

class SubscriptionCheckWorker(QThread):
    """–†–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    finished = pyqtSignal(bool, str)  # (is_premium, status_message)
    
    def __init__(self, donate_checker):
        super().__init__()
        self.donate_checker = donate_checker
        
    def run(self):
        try:
            is_premium, status_msg = self.donate_checker.check_subscription_status(use_cache=False)
            self.finished.emit(is_premium, status_msg)
        except Exception as e:
            self.finished.emit(False, f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {str(e)}")

class SubscriptionDialog(QDialog):
    def __init__(self, parent, donate_checker):
        super().__init__(parent)
        self.donate_checker = donate_checker
        self.setWindowTitle("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π")
        self.setFixedSize(580, 520)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
        self.setModal(True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É
        self.is_dark_theme = self.is_dark_theme_active()
        
        self.init_ui()
        self.check_subscription_status()
        
    def is_dark_theme_active(self):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞"""
        palette = self.palette()
        bg_color = palette.color(QPalette.ColorRole.Window)
        return bg_color.lightness() < 128
        
    def get_theme_styles(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã"""
        if self.is_dark_theme:
            return {
                'bg_color': '#2b2b2b',
                'text_color': '#ffffff',
                'border_color': '#555555',
                'input_bg': '#404040',
                'input_text': '#ffffff',
                'info_bg': '#1e3a5f',
                'info_border': '#4a90e2',
                'success_bg': '#1e4d3a',
                'success_border': '#4caf50',
                'success_text': '#4caf50',
                'error_bg': '#4d1e1e',
                'error_border': '#f44336',
                'error_text': '#f44336'
            }
        else:
            return {
                'bg_color': '#ffffff',
                'text_color': '#000000',
                'border_color': '#cccccc',
                'input_bg': '#f0f0f0',
                'input_text': '#000000',
                'info_bg': '#e7f3ff',
                'info_border': '#b3d9ff',
                'success_bg': '#d4edda',
                'success_border': '#c3e6cb',
                'success_text': '#155724',
                'error_bg': '#f8d7da',
                'error_border': '#f5c6cb',
                'error_text': '#721c24'
            }
        
    def init_ui(self):
        layout = QVBoxLayout(self)
        layout.setSpacing(15)
        
        styles = self.get_theme_styles()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—â–∏–π —Å—Ç–∏–ª—å –¥–∏–∞–ª–æ–≥–∞
        self.setStyleSheet(f"""
            QDialog {{
                background-color: {styles['bg_color']};
                color: {styles['text_color']};
            }}
        """)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π Zapret Premium")
        title_font = QFont()
        title_font.setPointSize(14)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title_label.setStyleSheet(f"color: {styles['text_color']}; margin: 10px;")
        layout.addWidget(title_label)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        line = QFrame()
        line.setFrameShape(QFrame.Shape.HLine)
        line.setFrameShadow(QFrame.Shadow.Sunken)
        line.setStyleSheet(f"color: {styles['border_color']};")
        layout.addWidget(line)
        
        # UUID –º–∞—à–∏–Ω—ã
        uuid_layout = QVBoxLayout()
        uuid_label = QLabel("UUID –≤–∞—à–µ–π –º–∞—à–∏–Ω—ã:")
        uuid_label.setFont(QFont("Arial", 10, QFont.Weight.Bold))
        uuid_label.setStyleSheet(f"color: {styles['text_color']}; margin-bottom: 5px;")
        uuid_layout.addWidget(uuid_label)
        
        uuid_container = QHBoxLayout()
        uuid_container.setSpacing(10)
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º QLineEdit –≤–º–µ—Å—Ç–æ QTextEdit –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.uuid_text = QLineEdit()
        self.uuid_text.setText(self.donate_checker.get_machine_uuid())
        self.uuid_text.setReadOnly(True)
        self.uuid_text.setStyleSheet(f"""
            QLineEdit {{
                background-color: {styles['input_bg']};
                color: {styles['input_text']};
                border: 1px solid {styles['border_color']};
                border-radius: 4px;
                padding: 8px;
                font-family: 'Courier New', monospace;
                font-size: 11px;
            }}
        """)
        
        copy_uuid_btn = QPushButton("–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å")
        copy_uuid_btn.setMinimumWidth(100)  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
        copy_uuid_btn.clicked.connect(self.copy_uuid)
        copy_uuid_btn.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border: none;
                padding: 8px 15px;
                border-radius: 4px;
                font-weight: bold;
                min-width: 80px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
            QPushButton:pressed {
                background-color: #3d8b40;
            }
        """)
        
        uuid_container.addWidget(self.uuid_text)
        uuid_container.addWidget(copy_uuid_btn)
        uuid_layout.addLayout(uuid_container)
        layout.addLayout(uuid_layout)
        
        # –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        status_layout = QVBoxLayout()
        status_label = QLabel("–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:")
        status_label.setFont(QFont("Arial", 10, QFont.Weight.Bold))
        status_label.setStyleSheet(f"color: {styles['text_color']}; margin-bottom: 5px;")
        status_layout.addWidget(status_label)
        
        self.status_text = QLabel("–ü—Ä–æ–≤–µ—Ä—è—é...")
        self.status_text.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.status_text.setWordWrap(True)
        self.status_text.setMinimumHeight(60)
        self.status_text.setStyleSheet(f"""
            QLabel {{
                background-color: {styles['input_bg']};
                color: {styles['text_color']};
                border: 2px solid {styles['border_color']};
                padding: 15px;
                border-radius: 6px;
                font-size: 12px;
            }}
        """)
        status_layout.addWidget(self.status_text)
        layout.addLayout(status_layout)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        self.progress_bar = QProgressBar()
        self.progress_bar.setRange(0, 0)  # –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        self.progress_bar.setStyleSheet(f"""
            QProgressBar {{
                border: 1px solid {styles['border_color']};
                border-radius: 4px;
                background-color: {styles['input_bg']};
                text-align: center;
            }}
            QProgressBar::chunk {{
                background-color: #2196F3;
                border-radius: 3px;
            }}
        """)
        layout.addWidget(self.progress_bar)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ Boosty
        info_text = QLabel(
            "üíé –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø–∞:\n"
            "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ UUID –≤–∞—à–µ–π –º–∞—à–∏–Ω—ã –∫–Ω–æ–ø–∫–æ–π –≤—ã—à–µ\n"
            "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–ø–∏—Å–∫–∏ Boosty\n"
            "3. –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à UUID\n"
            "4. –û–∂–∏–¥–∞–π—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤\n"
            "5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
        )
        info_text.setWordWrap(True)
        info_text.setStyleSheet(f"""
            QLabel {{
                background-color: {styles['info_bg']};
                color: {styles['text_color']};
                border: 1px solid {styles['info_border']};
                padding: 12px;
                border-radius: 6px;
                font-size: 11px;
                line-height: 1.4;
            }}
        """)
        layout.addWidget(info_text)

        # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ Boosty
        boosty_btn = QPushButton("üöÄ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Boosty")
        boosty_btn.clicked.connect(self.open_boosty)
        boosty_btn.setStyleSheet("""
            QPushButton {
                background-color: #FF6B35;
                color: white;
                border: none;
                padding: 12px 20px;
                border-radius: 6px;
                font-weight: bold;
                font-size: 12px;
                min-width: 200px;
            }
            QPushButton:hover {
                background-color: #E55A2B;
            }
            QPushButton:pressed {
                background-color: #CC4A21;
            }
        """)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É Boosty
        boosty_layout = QHBoxLayout()
        boosty_layout.addStretch()
        boosty_layout.addWidget(boosty_btn)
        boosty_layout.addStretch()
        layout.addLayout(boosty_layout)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_layout = QHBoxLayout()
        buttons_layout.setSpacing(10)
        
        refresh_btn = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
        refresh_btn.clicked.connect(self.refresh_subscription)
        refresh_btn.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 5px;
                font-weight: bold;
                min-width: 120px;
            }
            QPushButton:hover {
                background-color: #1976D2;
            }
            QPushButton:pressed {
                background-color: #0d47a1;
            }
        """)
            
        clear_cache_btn = QPushButton("–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à")
        clear_cache_btn.clicked.connect(self.clear_cache)
        clear_cache_btn.setStyleSheet("""
            QPushButton {
                background-color: #FF9800;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 5px;
                font-weight: bold;
                min-width: 120px;
            }
            QPushButton:hover {
                background-color: #F57C00;
            }
            QPushButton:pressed {
                background-color: #ef6c00;
            }
        """)
        
        close_btn = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        close_btn.clicked.connect(self.accept)
        close_btn.setStyleSheet("""
            QPushButton {
                background-color: #607D8B;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 5px;
                font-weight: bold;
                min-width: 120px;
            }
            QPushButton:hover {
                background-color: #455A64;
            }
            QPushButton:pressed {
                background-color: #263238;
            }
        """)
        
        buttons_layout.addWidget(refresh_btn)
        buttons_layout.addWidget(clear_cache_btn)
        buttons_layout.addStretch()
        buttons_layout.addWidget(close_btn)
        layout.addLayout(buttons_layout)

    def open_boosty(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Boosty"""
        try:
            boosty_url = "https://boosty.to/censorliber"
            webbrowser.open(boosty_url)
            log(f"–û—Ç–∫—Ä—ã—Ç–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ Boosty: {boosty_url}", level="INFO")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            QMessageBox.information(self, "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ Boosty", 
                                "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.\n\n"
                                "–ü–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å—Å—è –≤ Telegram —á–∞—Ç –∏ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π UUID "
                                "–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É '–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.")
            
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ Boosty: {e}", level="ERROR")
            
            # Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            QMessageBox.information(self, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É", 
                                "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä.\n\n"
                                "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:\n"
                                "https://boosty.to/censorliber\n\n"
                                "–ü–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —É–∫–∞–∂–∏—Ç–µ –≤–∞—à UUID –≤ Telegram —á–∞—Ç–µ.")

    def copy_uuid(self):
        """–ö–æ–ø–∏—Ä—É–µ—Ç UUID –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"""
        try:
            uuid = self.donate_checker.get_machine_uuid()
            pyperclip.copy(uuid)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            original_text = self.sender().text()
            self.sender().setText("‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ")
            self.sender().setStyleSheet("""
                QPushButton {
                    background-color: #4CAF50;
                    color: white;
                    border: none;
                    padding: 8px 15px;
                    border-radius: 4px;
                    font-weight: bold;
                    min-width: 80px;
                }
            """)
            
            QTimer.singleShot(2000, lambda: self.restore_copy_button(original_text))
            
            log("UUID —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞", level="INFO")
            
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ UUID: {e}", level="ERROR")
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å UUID")
    
    def restore_copy_button(self, original_text):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"""
        try:
            copy_btn = self.findChild(QPushButton, "")
            for btn in self.findChildren(QPushButton):
                if btn.text() == "‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ":
                    btn.setText(original_text)
                    btn.setStyleSheet("""
                        QPushButton {
                            background-color: #4CAF50;
                            color: white;
                            border: none;
                            padding: 8px 15px;
                            border-radius: 4px;
                            font-weight: bold;
                            min-width: 80px;
                        }
                        QPushButton:hover {
                            background-color: #45a049;
                        }
                        QPushButton:pressed {
                            background-color: #3d8b40;
                        }
                    """)
                    break
        except Exception:
            pass
    
    def check_subscription_status(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        self.progress_bar.setVisible(True)
        self.status_text.setText("–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏...")
        
        self.worker = SubscriptionCheckWorker(self.donate_checker)
        self.worker.finished.connect(self.on_subscription_checked)
        self.worker.start()
    
    def on_subscription_checked(self, is_premium, status_msg):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
        self.progress_bar.setVisible(False)
        styles = self.get_theme_styles()
        
        if is_premium:
            self.status_text.setText("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞")
            self.status_text.setStyleSheet(f"""
                QLabel {{
                    background-color: {styles['success_bg']};
                    border: 2px solid {styles['success_border']};
                    color: {styles['success_text']};
                    padding: 15px;
                    border-radius: 6px;
                    font-size: 12px;
                    font-weight: bold;
                }}
            """)
        else:
            self.status_text.setText(f"‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞\n{status_msg}")
            self.status_text.setStyleSheet(f"""
                QLabel {{
                    background-color: {styles['error_bg']};
                    border: 2px solid {styles['error_border']};
                    color: {styles['error_text']};
                    padding: 15px;
                    border-radius: 6px;
                    font-size: 12px;
                    font-weight: bold;
                }}
            """)
        
        log(f"–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω: {is_premium}", level="INFO")
    
    def refresh_subscription(self):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏"""
        log("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏", level="INFO")
        self.check_subscription_status()
    
    def clear_cache(self):
        """–û—á–∏—â–∞–µ—Ç –∫—ç—à –ø–æ–¥–ø–∏—Å–∫–∏"""
        try:
            self.donate_checker.clear_cache()
            QMessageBox.information(self, "–ö—ç—à –æ—á–∏—â–µ–Ω", 
                                  "–ö—ç—à –ø–æ–¥–ø–∏—Å–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω.\n"
                                  "–ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∑–∞–Ω–æ–≤–æ.")
            log("–ö—ç—à –ø–æ–¥–ø–∏—Å–∫–∏ –æ—á–∏—â–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", level="INFO")
        except Exception as e:
            log(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}", level="ERROR")
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à")